# Default values for ita-ag-oase.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  agentGlobalDefinition:
    name: agent-global
    enabled: true
    image:
      registry: "docker.io"
      organization: exastro
      package: exastro-it-automation

agents:
  - image:
      repository: ""
      # Overrides the image tag whose default is the chart appVersion.
      tag: ""
      pullPolicy: IfNotPresent
    extraEnv:
      TZ: Asia/Tokyo
      DEFAULT_LANGUAGE: ja
      LANGUAGE: "en"
      ITERATION: "500"
      EXECUTE_INTERVAL: "10"
      LOG_LEVEL: INFO
      AGENT_NAME: "oase-agent"
      EXASTRO_URL: "http://platform-auth:8000"
      EXASTRO_ORGANIZATION_ID: "org001"
      EXASTRO_WORKSPACE_ID: "ws01"
      # ROLES: "_ws_admin"
      EVENT_COLLECTION_SETTINGS_NAMES: "id0001"
    secret:
      EXASTRO_USERNAME: "admin"
      EXASTRO_PASSWORD: "sample-password"
      # USER_ID: "user01"
    resources: {}
      # requests:
      #   memory: "64Mi"
      #   cpu: "250m"
      # limits:
      #   memory: "64Mi"
      #   cpu: "250m"

initContainerImage:
  repository: "registry.access.redhat.com/ubi8/ubi-init"
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

persistence:
  enabled: true
  reinstall: false
  accessMode: ReadWriteMany
  size: 10Gi
  volumeType: hostPath # e.g.) hostPath or AKS
  storageClass: "-" # e.g.) azurefile or - (None)
  # matchLabels:
  #   release: "stable"
  # matchExpressions:
  #   - {key: environment, operator: In, values: [dev]}
  mountPath:
    storage: /storage
    homeDir: /home/app_user
    pid:
      path: /var/run_app_user/httpd/pid
      subPath: httpd-pid
    socket:
      path: /var/run_app_user/httpd/socket
      subPath: httpd-socket
    tmp: /tmp

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsUser: 1000
  runAsGroup: 1000
  runAsNonRoot: true

service: {}

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
 #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

nodeSelector: {}

tolerations: []

affinity: {}
