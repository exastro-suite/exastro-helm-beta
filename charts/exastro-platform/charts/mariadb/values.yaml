# Default values for mariadb.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
enabled: true

replicaCount: 1

completionCount: 1

initContainerImage:
  repository: "docker.io/busybox"
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

image:
  repository: "docker.io/mariadb"
  tag: "10.11"
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

persistence:
  enabled: true
  volumeName: pv-database
  reinstall: false
  accessMode: ReadWriteOnce
  size: 20Gi
  storageClass: "-" # e.g.) azurefile or - (None)
  matchLabels:
    name: pv-database
  matchExpressions:
    # - {key: name, operator: In, values: [pv-database]}
  mountPath:
    dataDir: /var/lib/mysql
    confDir: /etc/mysql/conf.d

dbSetup:
  dbConfInfo:
    name: mysql-server-conf-config
    customCnf: |-
      [mysqld]
      character-set-server=utf8mb4
      collation-server=utf8mb4_bin
      secure_file_priv=/tmp
      lower_case_table_names=1
      [client]
      default-character-set=utf8mb4

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  allowPrivilegeEscalation: true
  capabilities: {}
  privileged: false
  readOnlyRootFilesystem: false
  seLinuxOptions: {}

service:
  name: mysql
  type: ClusterIP
  port: 3306

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local
  secrets: []
    # - name: chart-example-tls
    #   certificate: |-
    #     -----BEGIN CERTIFICATE-----
    #     ...
    #     -----END CERTIFICATE-----
    #   key: |-
    #     -----BEGIN PRIVATE KEY-----
    #     ...
    #     -----END PRIVATE KEY-----

resources: {}
  # requests:
  #   memory: "256Mi"
  #   cpu: "1m"
  # limits:
  #   memory: "2Gi"
  #   cpu: "4"

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

livenessProbe:
  exec:
    command:
    - healthcheck.sh
    - --su-mysql
    - --connect
    - --innodb_initialized
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 3

readinessProbe:
  exec:
    command:
    - healthcheck.sh
    - --su-mysql
    - --connect
    - --innodb_initialized
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 3