{{/*
#   Copyright 2022 NEC Corporation
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
*/}}
{{- if .Values.enabled -}}
{{- $highAvailability := gt (int .Values.replicaCount) 1 -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "keycloak.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "keycloak.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "keycloak.selectorLabels" . | nindent 6 }}
  serviceName: {{ template "keycloak.name" . }}-headless
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "keycloak.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "keycloak.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: database-alive-check
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.initContainerImage.repository }}:{{ .Values.initContainerImage.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["sh", "-c"]
          args:
            - |
              {{- .Values.livenessCheck | nindent 14 }}
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: platform-params-pf-database
                  key: DB_HOST
            - name: DB_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: platform-params-keycloak
                  key: KEYCLOAK_DB_DATABASE
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: platform-secret-keycloak
                  key: KEYCLOAK_DB_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: platform-secret-keycloak
                  key: KEYCLOAK_DB_PASSWORD
      containers:
        - name: {{ template "keycloak.name" . }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["bash", "/scripts/startup.sh"]
          env:
          - name: TZ
            valueFrom:
              configMapKeyRef:
                name: platform-params-pf-global
                key: TZ
          - name: KEYCLOAK_ADMIN
            valueFrom:
              secretKeyRef:
                name: platform-secret-keycloak
                key: SYSTEM_ADMIN
          - name: KEYCLOAK_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: platform-secret-keycloak
                key: SYSTEM_ADMIN_PASSWORD
          - name: KC_DB
            valueFrom:
              configMapKeyRef:
                name: platform-params-pf-database
                key: DB_VENDOR
          - name: KC_DB_URL_HOST
            valueFrom:
              configMapKeyRef:
                name: platform-params-pf-database
                key: DB_HOST
          - name: KC_DB_URL_DATABASE
            valueFrom:
              configMapKeyRef:
                name: platform-params-keycloak
                key: KEYCLOAK_DB_DATABASE
          - name: KC_DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: platform-secret-keycloak
                key: KEYCLOAK_DB_USER
          - name: KC_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: platform-secret-keycloak
                key: KEYCLOAK_DB_PASSWORD
          - name: KC_PROXY
            value: "passthrough"
          - name: KC_HTTP_RELATIVE_PATH
            value: "/auth"
          - name: KC_HTTP_ENABLED
            value: "true"
          - name: KC_HOSTNAME_STRICT
            value: "false"
          - name: JAVA_OPTS_APPEND
            value: "-Djgroups.dns.query={{ template "keycloak.name" . }}-headless.{{ .Release.Namespace }}.svc"
          ports:
            - name: port-http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- if $highAvailability }}
            - name: jgroups
              containerPort: 7600
              protocol: TCP
          {{- end }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.service.port }}
            # httpGet:
            #   path: /auth/realms/master
            #   port: {{ .Values.service.port }}
            initialDelaySeconds: 600
            periodSeconds: 30
          readinessProbe:
            tcpSocket:
              port: {{ .Values.service.port }}
            # httpGet:
            #   path: /auth/realms/master
            #   port: {{ .Values.service.port }}
            initialDelaySeconds: 30
            periodSeconds: 30
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: {{ template "keycloak.name" . }}-config
              mountPath: /scripts/startup.sh
              subPath: startup.sh
            - name: {{ template "keycloak.name" . }}-config
              mountPath: /opt/keycloak/conf/cache-ispn-exastro-platform.xml
              subPath: cache-ispn-exastro-platform.xml
      terminationGracePeriodSeconds: 60
      volumes:
        - name: {{ template "keycloak.name" . }}-config
          configMap:
            name: {{ template "keycloak.name" . }}-config
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end -}}