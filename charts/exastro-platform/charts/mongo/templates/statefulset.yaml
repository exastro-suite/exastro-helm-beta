{{/*
#   Copyright 2023 NEC Corporation
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
*/}}

{{- if .Values.enabled -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "mongo.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "mongo.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "mongo.selectorLabels" . | nindent 6 }}
  serviceName: {{ template "mongo.name" . }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mongo.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mongo.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
      - name: remove-data
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.initContainerImage.repository }}:{{ .Values.initContainerImage.tag | default "latest" }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["sh", "-c"]
        args:
          - |
            {{- if .Values.persistence.reinstall }}
            echo "Removing data for database..."
            rm -rf {{ .Values.persistence.mountPath.dataDir }}/*
            {{- else }}
            echo "Leave data for database."
            {{- end }}
        volumeMounts:
          - name: volume-{{ template "mongo.name" . }}-storage
            mountPath: {{ .Values.persistence.mountPath.dataDir }}
      containers:
      - name: {{ template "mongo.name" . }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        # command:
        #   - mongod
        #   - "--bind_ip_all"
        #   - "--replSet"
        #   - "rs0"
        env:
        - name: TZ
          valueFrom:
            configMapKeyRef:
              name: platform-params-pf-global
              key: TZ
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: platform-secret-mongo
              key: MONGO_ADMIN_USER
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: platform-secret-mongo
              key: MONGO_ADMIN_PASSWORD
        volumeMounts:
          - name: volume-{{ template "mongo.name" . }}-storage
            mountPath: {{ .Values.persistence.mountPath.dataDir }}
          - name: mongo-server-conf
            mountPath: {{ .Values.persistence.mountPath.confDir }}
        ports:
          - name: port-mongo
            containerPort: {{ .Values.service.port }}
            protocol: TCP
        {{- if .Values.livenessProbe }}
        livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 10 }}
        {{- end }}
        {{- if .Values.readinessProbe }}
        readinessProbe:
          {{- toYaml .Values.readinessProbe | nindent 10 }}
        {{- end }}
      volumes:
        - name: mongo-server-conf
          configMap:
            name: mongo-server-conf-config
      {{- if not .Values.persistence.enabled }}
        - name: volume-{{ template "mongo.name" . }}-storage
          emptyDir: {}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: volume-{{ template "mongo.name" . }}-storage
      namespace: {{ $.Release.Namespace }}
      labels: {{ include "mongo.labels" . | nindent 8 }}
    spec:
      accessModes:
        - {{ .Values.persistence.accessMode | quote }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
      {{-     if .Values.persistence.storageClass }}
      {{-       if (eq "-" .Values.persistence.storageClass) }}
      storageClassName: ""
      {{-       else }}
      storageClassName: "{{ .Values.persistence.storageClass }}"
      {{-       end -}}
      {{-     end }}
      {{-     if or .Values.persistence.matchLabels .Values.persistence.matchExpressions }}
      selector:
      {{-       if .Values.persistence.matchLabels }}
        matchLabels: {{ toYaml .Values.persistence.matchLabels | nindent 10 }}
      {{-       end -}}
      {{-       if .Values.persistence.matchExpressions }}
        matchExpressions: {{ toYaml .Values.persistence.matchExpressions | nindent 10 }}
      {{-       end -}}
      {{-     end }}
  {{- end -}}
{{- end -}}