# Default values for ita-ag-oase.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  itaGlobalDefinition:
    name: ita-global
    enabled: true
    image:
      registry: "docker.io"
      organization: exastro
      package: exastro-it-automation
    config:
      DEFAULT_LANGUAGE: "ja"
      LANGUAGE: "en"
      CONTAINER_BASE: "kubernetes"
      TZ: "Asia/Tokyo"
      STORAGEPATH: "/storage/"
    secret:
      ENCRYPT_KEY: ""
    persistence:
      enabled: true
      reinstall: false
      accessMode: ReadWriteMany
      size: 10Gi
      volumeType: hostPath # e.g.) hostPath or AKS
      storageClass: "-" # e.g.) azurefile or - (None)
      # matchLabels: 
      #   release: "stable"
      # matchExpressions:
      #   - {key: environment, operator: In, values: [dev]}
  itaDatabaseDefinition:
    name: ita-database
    enabled: true
    config:
      DB_VENDOR: "mariadb"
      DB_HOST: "mariadb"
      DB_PORT: "3306"
      DB_DATABASE: "ITA_DB"
    secret:
      DB_ADMIN_USER: "root"
      DB_ADMIN_PASSWORD: "Ch@ngeMeDBAdm"
      DB_USER: "ITA_USER"
      DB_PASSWORD: "Ch@ngeMeITADB"
  gitlabDefinition:
    name: gitlab
    enabled: true
    config:
      GITLAB_PROTOCOL: "http" 
      GITLAB_HOST: "gitlab"
      GITLAB_PORT: "8080"
    secret:
      GITLAB_ROOT_PASSWORD: "Ch@ngeMeGL"
      GITLAB_ROOT_TOKEN: "change-this-token"
  mongoDefinition:
    name: mongo
    enabled: true
    config:
      MONGO_PROTOCOL: "http"
      MONGO_HOST: "mongo"
      MONGO_PORT: "27017"
    secret:
      MONGO_ADMIN_USERNAME: "admin"
      MONGO_ADMIN_PASSWORD: "Ch@ngeMeMGAdm"

agents:
  - image:
      repository: ""
      # Overrides the image tag whose default is the chart appVersion.
      tag: ""
      pullPolicy: IfNotPresent
    extraEnv:
      TZ: Asia/Tokyo
      DEFAULT_LANGUAGE: ja
      ITERATION: "500"
      EXECUTE_INTERVAL: "10"
      LOG_LEVEL: INFO
      AGENT_NAME: "oase-agent"
      URL: "http://platform-auth:8000"
      ORGANIZATION_ID: "org001"
      WORKSPACE_ID: "ws01"
      # ROLES: "_ws_admin"
      EVENT_COLLECTION_SETTINGS_NAMES: "id0001"
    secret:
      ENCRYPT_KEY: "dummy"
      USERNAME: "admin"
      PASSWORD: "sample-password"
      # USER_ID: "user01"
    resources: {}
      # requests:
      #   memory: "64Mi"
      #   cpu: "250m"
      # limits:
      #   memory: "64Mi"
      #   cpu: "250m"

replicaCount: 1

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

persistence:
  mountPath:
    storage: /storage
    homeDir: /home/app_user
    pid:
      path: /var/run_app_user/httpd/pid
      subPath: httpd-pid
    socket:
      path: /var/run_app_user/httpd/socket
      subPath: httpd-socket
    tmp: /tmp

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsUser: 1000
  runAsGroup: 1000
  runAsNonRoot: true

service: {}

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
 #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
